c
j=Job.joins(:job_applications).select("id, count(job_applications.ids").group(:id)
j=Job.joins(:job_applications).pluck("id, count(job_applications.ids")
j=Job.joins(:job_applications).select("id, count(job_applications.ids").group(:id)
j
j=Job.joins(:job_applications).select("id").group(:id).count
j
j.job_id
j.id
j.count
j=Job.joins(:job_applications).select("jobs.id").group(:id).count
Job.joins(:job_applications).select("jobs.id , count(job_applications.id) as job_application_count").group(:id).order('job_application_count DESC').limit(10)
Job.joins(:job_applications).select("jobs.* , count(job_applications.id) as job_application_count").group(:id).order('job_application_count DESC').limit(10)
Job.joins(:job_applications).select("jobs.id").group(:id).count
Job.joins(:job_applications).select("*").group(:id).count
Job.joins(:job_applications).select("jobs").group(:id).count
Job.joins(:job_applications).select("jobs.*").group(:id).count
Job.joins(:job_applications).select("jobs.id").group(:id).count
Job.joins(:job_applications).select("jobs.id").group(:id)
Job.joins(:job_applications).select("jobs.id, count(job_applications.id) as job_application_count").group(:id).order('job_application_count DESC').limit(10)
Job.joins(:job_applications).select("id, count(job_applications.id) as job_application_count").group(:id).order('job_application_count DESC').limit(10)
Job.joins(:job_applications).select(" count(job_applications.id) as job_application_count").group(:id).order('job_application_count DESC').limit(10)
Job.joins(:job_applications).select("jobs.* , count(job_applications.id) as job_application_count").group(:id).order('job_application_count DESC').limit(10)
c
@jobs.blank?
@jobs
n
c
@jobs
skills.each do |skill| @jobs = Job.where('required_skills like ?', "%#{skill.skill_name}%") end
skills.each
n
c
current_user.skills.select(:skill_name)
c
Job.where('required_skills like ?', "%#{skills.first.skill_name}%")
Job.where('required_skills ilike ?', "%#{skills.first.skill_name}%")
Job.where('required_skills ilike ?', "%#{skills.skill_name}%")
skills = current_user.skills.select(:skill_name)
Job.where('required_skills ilike ?', "%#{skills}%")
Job.where('required_skills like ?', "%#{skills}%")
Job.where('required_skills like ?', "%s#{skills}%")
Job.where('required_skills like ?', "%s#{skills.skill_name}%")
Job.where('required_skills like ?', "%s#{skills.skill_nam}%")
Job.where('required_skills like ?', "%s#{skills}%")
Job.where('required_skills ilike ?', "%s#{skills}%")
Job.where('required_skills like ?', "%s#{skills}%")
skills
n
c
end
   94:     end
@jobs = Job.where('required_skills like ?', "%#{job}%")
skills.each do |job|
Job.where('required_skills like ?', "%#{job}%")
job
skills.each
skills
n
skills
current_user.skills.pluck(:skill_name)
c
@jobs
job
n
job
Job.where('required_skills like ?', "%job%")
Job.where('required_skills ilike ?', "%job%")
skills
n
skills = current_user.skills.pluck(:skill_name)
c
j.each do |a| {Job.where('required_skills like ?', "%a%"} end;
j.each do |a| {Job.where('required_skills like ?', "%a%"} end:
j.each do |a| {Job.where('required_skills like ?', "%a%"'} end
j.each do |a| {Job.where('required_skills like ?', "%a%"} end
j.each do |a|
j = current_user.skills.pluck(:skill_name)
c
j=Job.where('required_skills like ?', "%#{current_user.skills.pluck(:skill_name)}%")
Job.where('required_skills like ?', "% ruby, html%")
Job.where('required_skills ilike ?', "% ruby, html%")
Job.where('required_skills like ?', "% ruby, html%")
Job.where('required_skills like ?', "% ruby html%")
Job.where('required_skills like ?', "% ruby%")
Job.where('required_skills like ?', "% ruby %")
Job.where('required_skills like ?', "%ruby %")
Job.where('required_skills like ?', "%ruby,%")
Job.where('required_skills like ?', "%ruby%")
Job.select(:job_title).where('required_skills like ?', "%ruby%")
Job.select(:job_title).where('required_skills like ?', "%java%")
Job.select(:job_title).where('required_skills ilike ?', "%java%")
Job.select(:job_title).where('required_skills ilike ?', "%c++%")
Job.select(:job_title).where('required_skills ilike ?', "%ruby%")
Job.select(:job_title).where('required_skills ilike ?', "%c++,ruby%")
Job.select(:job_title).where('required_skills ilike ?', "%c++ , java%")
Job.where('required_skills like ?', "%#{current_user.skills.pluck(:skill_name)}%").pluck(:job_title)
Job.where('required_skills ilike ?', "%#{current_user.skills.pluck(:skill_name)}%").pluck(:job_title)
Job.select(:job_title).where('required_skills ilike ?', "%#{current_user.skills.pluck(:skill_name)}%")
Job.where('required_skills ilike ?', "%#{current_user.skills.pluck(:skill_name)}%")
c
j=Job.where('required_skills ilike ?', "%#{current_user.skills.pluck(:skill_name)}%")
j=Job.where('required_skills like ?', "%#{current_user.skills.pluck(:skill_name)}%")
j=Job.where('required_skills like ?', "%#{current_user.skills.pluck(:skill_name}%")
j=Job.where('required_skills like ?', "%#{current_user.skills.skill_names}%")
j=Job.where('required_skills like ?', "%#{current_user.skills.skill_name}%")
j=Job.where('required_skills like ?', "%#{current_user.skills}%")
j=Job.where('required_skills like ?', "%#{current_user.skills.select(:skill_name)}%")
j=Job.where('required_skills like ?', "%#{current_user.skills.pluck(:skill_name)}%")
j=Job.where('required_skills ilike ?', "%#{current_user.skills.pluck(:skill_name)}%")
j=Job.where('required_skills like ?', "%#{current_user.skills.pluck(:skill_name)}%")
j.empty?
j.present?
j
j.errors
j=Job.where('required_skills ilike ?', "%#{current_user.skills.pluck(:skill_name)}%")
jJob.where('required_skills ilike ?', "%#{current_user.skills.pluck(:skill_name)}%")
j.blank?
j
j=Job.where('required_skills ilike ?', "%#{current_user.skills.pluck(:skill_name)}%")
Job.where('required_skills ilike ?', "%#{current_user.skills.pluck(:skill_name)}%")
current_user.skills.pluck(:skill_name)
Job.where('required_skills like ?', "%#{current_user.skills.pluck(:skill_name)}%")
Job.where('required_skills like ?', "%engl%")
Job.where('required_skills like ?', "%english%")
Job.where('required_skills like ?', "%html%")
Job.where('required_skills like ?', "%c++%")
Job.where('required_skills like ?', "%ruby%")
Job.where('required_skills like ?', "ruby")
Job.where('required_skills like ?', "c++")
Job.where('required_skills like ?', "%#{current_user.skills.pluck(:skill_name)}%")
job = Job.find(8)
Job.all
current_user.skills.pluck(:skill_name)
Job.where('required_skills like ?', "%#{current_user.skills.pluck(:skill_name)}%")
c
user.skills
user = User.first
Job.all
Job.where('required_skills like ?', "%#{current_user.skills.pluck(:skill_name)}%")
c
job.job_applications.applied.present?
job.job_applications.applied.presenc?
job.job_applications.applied.blank?
job.job_applications.applied
n
job.job_applications.applied
job.job_applications
job
c
job.job_applications.applied
job.job_applications
job
continue
c
n
User.all && Company.all
n
params
c
user
n
query.blank?
query.nil?
query
n
c
n
@companies
n
@user.blank?
.blank?
@user
n
nn
n
params
c
@user.first.name
@user
@user.blank?
@user.type
@user.name
@user.email
@user
n
params[:search]
c
@users
n
params[:search]
c
current_user.skills.create!(skill_name: skill_name)
current_user.skills.create!(skill_name: skill.skill_name)
current_user.skills
current_user
current_user.skills.create!(skill_name: "ruby")
current_user.skills.create!(skill_name: skill.skill_name)
current_user.skills.create(skill_name: skill.skill_name)
skill = Skill.where(skill_name: skill_name)
current_user.skills.create(skill_name: skill_name)
current_user.skills.create!(skill_name: skill_name)
current_user.skills
current_user.skills << params[:skills]
current_user.skills << skills
skill_name
current_user.skills << skill_name
current_user.skills
current_user.skills.create!(skill_name: skill_name)
n
skill_name.present?
n
current_user.skills.where(skill_name: skill_name).present?
n
params[:skills]
c
e.message
n
params[:skills]
c
continue
c
current_user.skills << skills
n
skills.any?
skills
n
Skill.where(skill_name: skill_name)
n
params[:skills]
c
params[:skills]
params[:skill]
params[:skill_name]
params
c
job.job_applications.last.id
job.job_applications.first.id
job.job_applications.first
job.job_applications
job
c
params[:id]
params
c
JobApplication.find_by_id(params[:id])
params[:id]
params
c
@application
c
job_application.resume.preview(resize_to_limit: [100 , 100]).processed.url
job_application.resume.preview(resize_to_limit: [100 , 100])
job_application.resume.previewable?
job_application.resume.attached?
job_application.resume
