continue
@request.env
@request
n
continue
e.message
n
Company.create!(company_params)
continue
n
e.message
n
params
company_params
continue
params
continue
e.message
n
params
company_params
continue
e.message
n
params
continue
company_params
e.message
n
params
continue
e.message
n
continue
company_params
params.valid?
params
continue
company_params
continue
params
company_params
continue
company_params
continue
n
skill_params
continue
n
skill_params
continue
@skill.save!
@skill.save
e.message
n
@skill.errors.message
@skill.errors
@skill
@skill.save
n
skill_params
continue
c
n
params
n
params
n
skills.last.id.to_s
skills
expect(response)
continue
JSON.parse
Json.parse
Json.
JSON
JSON.parse['data']['id']
JSON.parse['data']
JSON.parse[data]
JSON.parse(response.body)[data]
JSON.parse(response)
JSON.parse(response.body)
JSON.parse
skills
skill
Skill.all
skill:
skill
c
n
Skill.all
@skill.save
n
@skill
n
continue
Skill.first
Skill.all
Skill.last
Skill
Skill.last.id.to_s
params
params: {skill: {skill_name: "java"} }
params:
params
continue
expect(JSON.parse(response.body)['data']['id']).to eq(Skill.last.id.to_s)
n
continue
n
skill_params
continue
skill_params
skill_param
skill_params
@skill.errors.full_messages
@skill.errors.full_message
@skill.error
e.message
e.messager
n
continue
params
continue
params
continue
params
skill_Params
continue
skill_params
e.message
n
continue
e.message
n
skill_params
continue
skill_params
continue
skill_params
continue
skill_params
@skill
n
@skill
continue
c
subject {FactoryBot.create(:company)}
subject
subject(:params) {FactoryBot.create(:company)}
FactoryBot.create(:company)
let(:params)
params
let(:params) { FactoryBot.create(:company) }
n
continue
company_params
n
continue
@company.save!
@company.ave!
@company
e.message
n
company_params
continue
company
COMPANY
Company
instance_of(Company)
be_instance_of(Company)
assigns(:company)
assigns[:company]
assigns[:company])
it 'is expected to assign user as new instance variable' do expect(assigns[:company]).to be_instance_of(Company) end
   38:     end
   37:       expect(assigns[:company]).to be_instance_of(Company)
 it 'is expected to assign user as new instance variable' do
expect(assigns[:company]).to be_instance_of(Company)
continue
set_params
continue
params[:status]
 application.select :status, [:accepted, :rejected]
continue
:status accpted
:status :accpted
:status  "accpted"
:status = "accpted"
application.select :status, [:accepted, :rejected]
continue
params[:status]
continue
params[:status]
status: params[:status]
continue
n
@application
continue
@application
continue
@application
continue
@companies.each do |company| company.company_name end
@companies.each do |company|
@companies.each
@companies
continue
@companies
n
@companies
@companes
n
current_user.company
current_user.type == "JobRecruiter" && current_user.company.present?
continue
e.message
n
render(:partial => 'skills/add_skill')
continue
current_user.skills << @skills
e.message
n
params[:skill_name]
continue
skill_name = params[:skill][:skills]
continue
params[:id]
continue
JobApplication.find_by_id(params[:@application.id])
JobApplication.find_by_id(params[:id])
continue
n
 current_user.type == "JobRecruiter"
if current_user.type == "JobRecruiter"
current_user.type
continue
n
flash[:alert]
n
flash[:alert] = e.message
e.message
n
set_params
continue
set_params
@job_application 
n
current_user.job_applications.new(set_params)
@job_application.job_id
@job_application.resume
@job_application
@job_application = current_user.job_applications.new(set_params)
continue
:job_id
params[:job_id]
